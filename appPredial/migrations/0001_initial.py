# Generated by Django 4.1 on 2023-08-19 03:48

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CodigoPostal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigoPostal', models.CharField(max_length=45, verbose_name='Codigo Postal')),
            ],
            options={
                'verbose_name': 'Codigo Postal',
                'verbose_name_plural': 'Codigo Postales',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Colonia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_colonia', models.CharField(max_length=45)),
            ],
            options={
                'verbose_name': 'Colonia',
                'verbose_name_plural': 'Colonias',
            },
        ),
        migrations.CreateModel(
            name='Comunidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_comunidad', models.CharField(max_length=45)),
            ],
            options={
                'verbose_name': 'Comunidad',
                'verbose_name_plural': 'Comunidades',
            },
        ),
        migrations.CreateModel(
            name='Contribuyente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rfc', models.CharField(help_text='format: APMNXXXXXXHHH', max_length=13, unique=True, validators=[django.core.validators.RegexValidator('^([A-ZÑ\\x26]{3,4}([0-9]{2})(0[1-9]|1[0-2])(0[1-9]|1[0-9]|2[0-9]|3[0-1])([A-Z]|[0-9]){2}([A]|[0-9]){1})?$', message='RFC es incorrecto')], verbose_name='RFC')),
                ('curp', models.CharField(max_length=18, unique=True, validators=[django.core.validators.RegexValidator('^([A-Z][AEIOUX][A-Z]{2}\\d{2}(?:0[1-9]|1[0-2])(?:0[1-9]|[12]\\d|3[01])[HM](?:AS|B[CS]|C[CLMSH]|D[FG]|G[TR]|HG|JC|M[CNS]|N[ETL]|OC|PL|Q[TR]|S[PLR]|T[CSL]|VZ|YN|ZS)[B-DF-HJ-NP-TV-Z]{3}[A-Z\\d])(\\d)$', message='El CURP es incorrecto')], verbose_name='CURP')),
                ('email', models.CharField(max_length=45, unique=True, verbose_name='Email')),
                ('name', models.CharField(max_length=300, verbose_name='Nombre')),
                ('ap', models.CharField(max_length=45, verbose_name='Apellido Paterno')),
                ('am', models.CharField(max_length=45, verbose_name='Apellido Materno')),
                ('calle', models.CharField(max_length=45, verbose_name='Calle')),
                ('numeroext', models.CharField(max_length=45, validators=[django.core.validators.RegexValidator('^[0-9]+$', message='Ingresa solo números en Número exterior')], verbose_name='Numero Exterior')),
                ('numeroint', models.CharField(max_length=45, validators=[django.core.validators.RegexValidator('^[0-9]+$', message='Ingresa solo números en Número interior')], verbose_name='Numero Interior')),
                ('cp', models.CharField(max_length=45, verbose_name='Codigo Postal')),
                ('colonia', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='appPredial.colonia')),
                ('comunidad', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='appPredial.comunidad')),
            ],
            options={
                'verbose_name': 'Contribuyente',
                'verbose_name_plural': 'Contribuyentes',
            },
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_estado', models.CharField(max_length=45)),
            ],
            options={
                'verbose_name': 'Estado',
                'verbose_name_plural': 'Estados',
            },
        ),
        migrations.CreateModel(
            name='FormaPago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formaPago', models.CharField(default='', max_length=45, verbose_name='Forma de Pago')),
            ],
            options={
                'verbose_name': 'Formas de Pago',
                'verbose_name_plural': 'Formas de Pago',
            },
        ),
        migrations.CreateModel(
            name='TipoPredio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(max_length=45, verbose_name='tipo')),
                ('costo', models.FloatField(default=0.0)),
            ],
            options={
                'verbose_name': 'TipoPredio',
                'verbose_name_plural': 'TiposPredios',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Predio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('claveCatastral', models.CharField(max_length=31, unique=True, verbose_name='Clave Catastral')),
                ('calle', models.CharField(max_length=45, verbose_name='Calle')),
                ('numeroext', models.CharField(max_length=45, verbose_name='Numero Exterior')),
                ('numeroint', models.CharField(max_length=45, verbose_name='Numero Interior')),
                ('municipio', models.CharField(default='TZOMPANTEPEC', max_length=45, verbose_name='Municipio')),
                ('estado', models.CharField(default='TLAXCALA', max_length=45, verbose_name='Estado')),
                ('colonia', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='appPredial.colonia')),
                ('comunidad', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='appPredial.comunidad')),
                ('cp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPredial.codigopostal')),
                ('idtipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPredial.tipopredio', verbose_name='Tipo de Predio')),
                ('rfc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPredial.contribuyente', to_field='rfc', verbose_name='RFC')),
            ],
            options={
                'verbose_name': 'Predio',
                'verbose_name_plural': 'Predios',
            },
        ),
        migrations.CreateModel(
            name='Pago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agnio', models.IntegerField(default=0, verbose_name='Año')),
                ('recargo', models.FloatField(default=0.0, verbose_name='Recargo')),
                ('descuento', models.FloatField(default=0.0, verbose_name='Descuento')),
                ('status_inapam', models.BooleanField(default=False, verbose_name='INAPAM')),
                ('fechaPago', models.DateField(verbose_name='Fecha de Pago')),
                ('total', models.FloatField(default=0.0, verbose_name='Total')),
                ('status_timbrado', models.BooleanField(default=False, verbose_name='Status del Timbrado')),
                ('status_pagado', models.BooleanField(default=False, verbose_name='Status del Pago')),
                ('claveCatastral', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPredial.predio', to_field='claveCatastral', verbose_name='Clave Catastral')),
                ('formaPago', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPredial.formapago')),
            ],
            options={
                'verbose_name': 'Pago',
                'verbose_name_plural': 'Pagos',
            },
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_municipio', models.CharField(max_length=45)),
                ('id_estado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPredial.estado')),
            ],
            options={
                'verbose_name': 'Municipio',
                'verbose_name_plural': 'Municipios',
            },
        ),
        migrations.AddField(
            model_name='contribuyente',
            name='estado',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='appPredial.estado'),
        ),
        migrations.AddField(
            model_name='contribuyente',
            name='municipio',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='appPredial.municipio'),
        ),
        migrations.AddField(
            model_name='comunidad',
            name='id_municipio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPredial.municipio'),
        ),
        migrations.AddField(
            model_name='colonia',
            name='id_comunidad',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPredial.comunidad'),
        ),
    ]
